policy_module(vault, #VERSION#)

########################################
#
# Declarations
#

type vault_t;

# Mapped to the /usr/bin/vault binary/process
type vault_exec_t;

## init_daemon_domain
###  Create a domain for long running processes
###  (daemons/services) which are started by init scripts.
init_daemon_domain(vault_t, vault_exec_t)

# Mapped to the /etc/vault.d folder
type vault_conf_t;
files_type(vault_conf_t)

# Mapped to the /opt/vault folder
type vault_sys_content_t;
files_type(vault_sys_content_t)

# Mapped to the /var/log/vault folder and /var/log/vault_audit.log
type vault_log_t;
files_type(vault_log_t)

# Mapped to tcp:8201
type vault_cluster_port_t;
corenet_port(vault_cluster_port_t)

# If you uncomment the below - this changes enforcement to permissive
# i.e. selinux will audit but not block
#permissive vault_t;

########################################
#
# vault local policy
#

require {
	type vault_t;
	type vault_conf_t;
	type vault_sys_content_t;
	type vault_log_t;
	type kernel_t; # Needed for /dev/log
    type init_t; # Needed for systemD to read vault.env
	type unreserved_port_t;
	class netlink_route_socket { bind create getattr nlmsg_read read write };
	class tcp_socket { accept bind connect create getattr getopt listen setopt read write };
	class unix_dgram_socket { bind create getattr setopt connect sendto };
	class file { create getattr lock map open read write };
	class dir { add_name create getattr open read write search };
    #type=AVC msg=audit(11/23/2022 15:32:21.737:193) : avc:  denied  { open } for  pid=2078 comm=vault path=/etc/resolv.conf dev="dm-0" ino=6293839 scontext=system_u:system_r:vault_t:s0 tcontext=system_u:object_r:net_conf_t:s0 tclass=file permissive=1 
    #type=AVC msg=audit(11/23/2022 15:32:21.737:193) : avc:  denied  { read } for  pid=2078 comm=vault name=resolv.conf dev="dm-0" ino=6293839 scontext=system_u:system_r:vault_t:s0 tcontext=system_u:object_r:net_conf_t:s0 tclass=file permissive=1 
    #type=AVC msg=audit(11/23/2022 15:32:21.737:194) : avc:  denied  { getattr } for  pid=2078 comm=vault path=/etc/resolv.conf dev="dm-0" ino=6293839 scontext=system_u:system_r:vault_t:s0 tcontext=system_u:object_r:net_conf_t:s0 tclass=file permissive=1 
    type net_conf_t; # Needed for vault to access /etc/resolv.conf
    #type=AVC msg=audit(11/23/2022 15:32:21.737:195) : avc:  denied  { name_connect } for  pid=2078 comm=vault dest=80 scontext=system_u:system_r:vault_t:s0 tcontext=system_u:object_r:http_port_t:s0 tclass=tcp_socket permissive=1 
    type http_port_t;
    #type=AVC msg=audit(11/23/2022 15:32:21.755:201) : avc:  denied  { read } for  pid=2078 comm=vault name=certs dev="dm-0" ino=2097475 scontext=system_u:system_r:vault_t:s0 tcontext=system_u:object_r:cert_t:s0 tclass=lnk_file permissive=1 
    #type=AVC msg=audit(11/23/2022 15:32:21.755:201) : avc:  denied  { search } for  pid=2078 comm=vault name=ssl dev="dm-0" ino=2097474 scontext=system_u:system_r:vault_t:s0 tcontext=system_u:object_r:cert_t:s0 tclass=dir permissive=1 
    #type=AVC msg=audit(11/23/2022 15:32:21.755:202) : avc:  denied  { open } for  pid=2078 comm=vault path=/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem dev="dm-0" ino=4216226 scontext=system_u:system_r:vault_t:s0 tcontext=system_u:object_r:cert_t:s0 tclass=file permissive=1 
    #type=AVC msg=audit(11/23/2022 15:32:21.755:202) : avc:  denied  { read } for  pid=2078 comm=vault name=tls-ca-bundle.pem dev="dm-0" ino=4216226 scontext=system_u:system_r:vault_t:s0 tcontext=system_u:object_r:cert_t:s0 tclass=file permissive=1 
    #type=AVC msg=audit(11/23/2022 15:32:21.755:203) : avc:  denied  { getattr } for  pid=2078 comm=vault path=/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem dev="dm-0" ino=4216226 scontext=system_u:system_r:vault_t:s0 tcontext=system_u:object_r:cert_t:s0 tclass=file permissive=1 
    #type=AVC msg=audit(11/23/2022 15:32:21.759:204) : avc:  denied  { open } for  pid=2078 comm=vault path=/etc/pki/tls/certs dev="dm-0" ino=179 scontext=system_u:system_r:vault_t:s0 tcontext=system_u:object_r:cert_t:s0 tclass=dir permissive=1 
    #type=AVC msg=audit(11/23/2022 15:32:21.759:204) : avc:  denied  { read } for  pid=2078 comm=vault name=certs dev="dm-0" ino=179 scontext=system_u:system_r:vault_t:s0 tcontext=system_u:object_r:cert_t:s0 tclass=dir permissive=1
    type cert_t;
    #type=AVC msg=audit(11/23/2022 15:32:21.915:205) : avc:  denied  { open } for  pid=2078 comm=vault path=/opt/vault/vault.hclic dev="dm-10" ino=133 scontext=system_u:system_r:vault_t:s0 tcontext=unconfined_u:object_r:user_home_t:s0 tclass=file permissive=1 
    #type=AVC msg=audit(11/23/2022 15:32:21.915:205) : avc:  denied  { read } for  pid=2078 comm=vault name=vault.hclic dev="dm-10" ino=133 scontext=system_u:system_r:vault_t:s0 tcontext=unconfined_u:object_r:user_home_t:s0 tclass=file permissive=1
    type user_home_t;
}

# read-write file permissions on anonymous pipes
allow vault_t self:fifo_file rw_fifo_file_perms;

# We now need to be able to create socket permissions in itself
allow vault_t self:unix_stream_socket create_stream_socket_perms;
# and network sockets too
allow vault_t self:netlink_route_socket { bind create getattr nlmsg_read };
allow vault_t self:unix_dgram_socket { bind create getattr setopt connect sendto write };
allow vault_t self:tcp_socket { accept bind create getattr listen setopt read write };
allow vault_t unreserved_port_t:tcp_socket name_connect;
# Allow to write to /dev/log
allow vault_t kernel_t:unix_dgram_socket sendto;
# allow outbound network connectivity (for node to node comms)
allow vault_t self:tcp_socket { connect getopt };

# Allow binding to ports
corenet_tcp_bind_generic_node(vault_t)
# trivnet1 is configured as 8200 - hence we need to allow binding to trivnet1
corenet_tcp_bind_trivnet1_port(vault_t)
# and allowing connecting to it too
corenet_tcp_connect_trivnet1_port(vault_t)
# # unreserved allowes for 8201 - which isn't configured like 8200
# corenet_tcp_bind_unreserved_ports(vault_t)
# # and connect to them too
# corenet_tcp_connect_unreserved_ports(vault_t)
#
# We've added the vault_cluster_port_t and package tasks should run the following to label
# $ semanage port -a -t vault_cluster_port_t -p tcp 8201
allow vault_t vault_cluster_port_t:tcp_socket { name_bind name_connect };

kernel_read_net_sysctls(vault_t)
kernel_search_network_sysctl(vault_t)

#!!!! This avc has a dontaudit rule in the current policy
allow vault_t self:netlink_route_socket { read write };

## domain_use_interactive_fds
###  Inherit and use file descriptors from
###  domains with interactive programs.
domain_use_interactive_fds(vault_t)

#xntrik - don't think this is needed
#files_read_etc_files(vault_t)

## miscfiles_read_localization
###  Allow process to read localization information.
miscfiles_read_localization(vault_t)

## dev_read_sysfs
###  Allow the specified domain to read the contents of
###  the sysfs filesystem.  This filesystem contains
###  information, parameters, and other settings on the
###  hardware installed on the system.
##
## This was needed for Fedora (but apparently not CentOS)
## Although Vault seems to function even without the perm
dev_read_sysfs(vault_t)

## init_nnp_daemon_domain
###  Allow SELinux Domain trasition from sytemd
###  into confined domain with NoNewPrivileges
###  Systemd Security feature.
init_nnp_daemon_domain(vault_t)


# Need to access conf files
allow vault_t vault_conf_t:file { getattr open read };
allow vault_t vault_conf_t:dir search;

## auth_read_passwd
###  Read the passwd passwords file (/etc/passwd)
###  Allow to use sss nsswitch module for passwd and group.
###  Allow to use systemd nsswitch module for passwd and group
###  which is used for dynamic users.
auth_read_passwd(vault_t)

# Warning: corecmd_exec_ls() has been deprecated, please use corecmd_exec_bin() instead.
#corecmd_exec_ls(vault_t)
corecmd_exec_bin(vault_t)

## kernel_read_sys
###  Allows caller to read system state information in /proc.
kernel_read_system_state(vault_t)

# Need to allow systemD access to read vault.env
allow init_t vault_conf_t:file { read open };

# Need to allow access to /etc/resolv.conf
#type=AVC msg=audit(11/23/2022 15:32:21.737:193) : avc:  denied  { open } for  pid=2078 comm=vault path=/etc/resolv.conf dev="dm-0" ino=6293839 scontext=system_u:system_r:vault_t:s0 tcontext=system_u:object_r:net_conf_t:s0 tclass=file permissive=1 
#type=AVC msg=audit(11/23/2022 15:32:21.737:193) : avc:  denied  { read } for  pid=2078 comm=vault name=resolv.conf dev="dm-0" ino=6293839 scontext=system_u:system_r:vault_t:s0 tcontext=system_u:object_r:net_conf_t:s0 tclass=file permissive=1 
#type=AVC msg=audit(11/23/2022 15:32:21.737:194) : avc:  denied  { getattr } for  pid=2078 comm=vault path=/etc/resolv.conf dev="dm-0" ino=6293839 scontext=system_u:system_r:vault_t:s0 tcontext=system_u:object_r:net_conf_t:s0 tclass=file permissive=1 
allow vault_t net_conf_t:file { read open getattr };

#type=AVC msg=audit(11/23/2022 15:32:21.737:195) : avc:  denied  { name_connect } for  pid=2078 comm=vault dest=80 scontext=system_u:system_r:vault_t:s0 tcontext=system_u:object_r:http_port_t:s0 tclass=tcp_socket permissive=1 
allow vault_t http_port_t:tcp_socket { name_connect };

#type=AVC msg=audit(11/23/2022 15:32:21.755:201) : avc:  denied  { read } for  pid=2078 comm=vault name=certs dev="dm-0" ino=2097475 scontext=system_u:system_r:vault_t:s0 tcontext=system_u:object_r:cert_t:s0 tclass=lnk_file permissive=1 
allow vault_t cert_t:lnk_file  { read } ;
#type=AVC msg=audit(11/23/2022 15:32:21.755:201) : avc:  denied  { search } for  pid=2078 comm=vault name=ssl dev="dm-0" ino=2097474 scontext=system_u:system_r:vault_t:s0 tcontext=system_u:object_r:cert_t:s0 tclass=dir permissive=1 
#type=AVC msg=audit(11/23/2022 15:32:21.759:204) : avc:  denied  { open } for  pid=2078 comm=vault path=/etc/pki/tls/certs dev="dm-0" ino=179 scontext=system_u:system_r:vault_t:s0 tcontext=system_u:object_r:cert_t:s0 tclass=dir permissive=1 
#type=AVC msg=audit(11/23/2022 15:32:21.759:204) : avc:  denied  { read } for  pid=2078 comm=vault name=certs dev="dm-0" ino=179 scontext=system_u:system_r:vault_t:s0 tcontext=system_u:object_r:cert_t:s0 tclass=dir permissive=1
allow vault_t cert_t:dir { search open read } ;
#type=AVC msg=audit(11/23/2022 15:32:21.755:202) : avc:  denied  { open } for  pid=2078 comm=vault path=/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem dev="dm-0" ino=4216226 scontext=system_u:system_r:vault_t:s0 tcontext=system_u:object_r:cert_t:s0 tclass=file permissive=1 
#type=AVC msg=audit(11/23/2022 15:32:21.755:202) : avc:  denied  { read } for  pid=2078 comm=vault name=tls-ca-bundle.pem dev="dm-0" ino=4216226 scontext=system_u:system_r:vault_t:s0 tcontext=system_u:object_r:cert_t:s0 tclass=file permissive=1 
#type=AVC msg=audit(11/23/2022 15:32:21.755:203) : avc:  denied  { getattr } for  pid=2078 comm=vault path=/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem dev="dm-0" ino=4216226 scontext=system_u:system_r:vault_t:s0 tcontext=system_u:object_r:cert_t:s0 tclass=file permissive=1 
allow vault_t cert_t:file { open read getattr } ;

#type=AVC msg=audit(11/23/2022 15:32:21.915:205) : avc:  denied  { open } for  pid=2078 comm=vault path=/opt/vault/vault.hclic dev="dm-10" ino=133 scontext=system_u:system_r:vault_t:s0 tcontext=unconfined_u:object_r:user_home_t:s0 tclass=file permissive=1 
#type=AVC msg=audit(11/23/2022 15:32:21.915:205) : avc:  denied  { read } for  pid=2078 comm=vault name=vault.hclic dev="dm-10" ino=133 scontext=system_u:system_r:vault_t:s0 tcontext=unconfined_u:object_r:user_home_t:s0 tclass=file permissive=1
allow vault_t user_home_t:file { open read };



# Need to access data files
allow vault_t vault_sys_content_t:dir { add_name create getattr open read write search };
allow vault_t vault_sys_content_t:file { create getattr lock map open read write };

# Need to access log files
allow vault_t vault_log_t:dir { getattr search write add_name };
allow vault_t vault_log_t:file { create append open setattr };

# Needs this for logging
logging_create_devlog_dev(vault_t)

## <desc>
## <p>
## Allow vault servers to send outbound DNS
## typically used to resolve DNS.
## </p>
## </desc>
#type=AVC msg=audit(11/23/2022 15:32:21.737:196) : avc:  denied  { create } for  pid=2078 comm=vault scontext=system_u:system_r:vault_t:s0 tcontext=system_u:system_r:vault_t:s0 tclass=udp_socket permissive=1 
#type=AVC msg=audit(11/23/2022 15:32:21.737:197) : avc:  denied  { create } for  pid=2078 comm=vault scontext=system_u:system_r:vault_t:s0 tcontext=system_u:system_r:vault_t:s0 tclass=udp_socket permissive=1 
#type=AVC msg=audit(11/23/2022 15:32:21.737:198) : avc:  denied  { setopt } for  pid=2078 comm=vault scontext=system_u:system_r:vault_t:s0 tcontext=system_u:system_r:vault_t:s0 tclass=udp_socket permissive=1 
#type=AVC msg=audit(11/23/2022 15:32:21.737:199) : avc:  denied  { connect } for  pid=2078 comm=vault scontext=system_u:system_r:vault_t:s0 tcontext=system_u:system_r:vault_t:s0 tclass=udp_socket permissive=1 
#type=AVC msg=audit(11/23/2022 15:32:21.737:200) : avc:  denied  { getattr } for  pid=2078 comm=vault laddr=10.0.128.24 lport=48886 faddr=169.254.169.254 fport=53 scontext=system_u:system_r:vault_t:s0 tcontext=system_u:system_r:vault_t:s0 tclass=udp_socket permissive=1
gen_tunable(vault_outbound_udp_dns, true)
tunable_policy(`vault_outbound_udp_dns',`
  require {
    class udp_socket { connect create getattr read setopt write };
    type vault_t;
  }
  allow vault_t self:udp_socket { connect create getattr read setopt write };
  sysnet_read_config(vault_t)
')

## <desc>
## <p>
## Allow vault servers to connect
## to external HTTP servers.
## </p>
## </desc>
gen_tunable(vault_outbound_http, true)
tunable_policy(`vault_outbound_http',`
  require {
    type vault_t;
  }
  corenet_tcp_connect_http_port(vault_t)
  miscfiles_read_generic_certs(vault_t)
')
